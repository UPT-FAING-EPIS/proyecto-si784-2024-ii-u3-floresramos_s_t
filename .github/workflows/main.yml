name: Unified Testing & Analysis Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  generate-and-publish:
    name: Generate Reports and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Semgrep Analysis
      - name: Run Semgrep
        run: |
          docker pull semgrep/semgrep
          mkdir -p reports/security
          docker run --rm -v $(pwd):/src semgrep/semgrep semgrep scan --config="p/default" --json --output reports/security/semgrep.json

      - name: Install prospector-html
        run: python -m pip install prospector2html

      - name: Convert Semgrep results to HTML
        run: |
          cd reports/security
          prospector-html --input semgrep.json --output semgrep-report.html --filter semgrep || true
      
      # Snyk Analysis
      - uses: snyk/actions/setup@master
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Run Snyk test
        run: |
          mkdir -p reports/security
          snyk code test --json | snyk-to-html -o reports/security/snyk-report.html
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # Mutation Testing
      # Mutation Testing
     # Mutation Testing
      - name: Install Stryker
        run: dotnet tool install -g dotnet-stryker
        
      - name: Run Stryker and Copy Report
        run: |
          echo "Current directory: $(pwd)"
          cd PROYECTO_PDF
          echo "Project directory contents:"
          ls -la
          echo "Running Stryker..."
          cd NegocioPDF.Tests
          echo "Test project directory contents:"
          ls -la
          # Ejecutar Stryker con la ruta completa al proyecto
          dotnet stryker --project-file "NegocioPDF.Tests.csproj" --reporters "['html']" --project-name "NegocioPDF" || true
          
          # Verificar y copiar el reporte
          if [ -d "StrykerOutput" ]; then
            echo "StrykerOutput directory exists"
            echo "Contents of StrykerOutput:"
            ls -R StrykerOutput/
            
            mkdir -p ../../reports/mutation
            if [ -d "StrykerOutput/reports" ]; then
              echo "Copying mutation reports..."
              cp -r StrykerOutput/reports/* ../../reports/mutation/
              echo "Contents of mutation reports directory:"
              ls -la ../../reports/mutation/
            else
              echo "No reports directory found in StrykerOutput"
            fi
          else
            echo "Creating placeholder report..."
            mkdir -p ../../reports/mutation
            cat > ../../reports/mutation/mutation-report.html << 'EOF'
            <!DOCTYPE html>
            <html>
            <head>
                <title>Mutation Test Results</title>
                <style>
                    body { font-family: Arial; padding: 20px; }
                    .error { color: red; }
                </style>
            </head>
            <body>
                <h1>Mutation Test Results</h1>
                <p class="error">The mutation test report could not be generated. Please check the CI/CD logs for more information.</p>
            </body>
            </html>
            EOF
          fi
      
      # BDD Tests
      - name: Generate BDD Report
        run: |
          cd PROYECTO_PDF
          dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
          mkdir -p ../reports/bdd
          livingdoc test-assembly ./NegocioPDF.Tests/bin/Debug/net8.0/NegocioPDF.Tests.dll -t ./NegocioPDF.Tests/bin/Debug/net8.0/TestExecution.json -o ../reports/bdd/bdd-report.html

      # Create main dashboard
      - name: Create Dashboard
        run: |
          cat > reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Testing Results Dashboard</title>
            <style>
              body { 
                font-family: Arial; 
                max-width: 1200px; 
                margin: 0 auto; 
                padding: 20px; 
                background-color: #f5f5f5;
              }
              .card { 
                border: 1px solid #ddd; 
                padding: 20px; 
                margin: 20px 0; 
                border-radius: 8px;
                background-color: white;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
              }
              .card h2 {
                color: #333;
                margin-top: 0;
                border-bottom: 2px solid #2196F3;
                padding-bottom: 10px;
              }
              .metric { 
                font-size: 24px; 
                color: #2196F3; 
              }
              a {
                display: inline-block;
                padding: 10px 20px;
                background-color: #2196F3;
                color: white;
                text-decoration: none;
                border-radius: 4px;
                transition: background-color 0.3s;
                margin: 5px;
              }
              a:hover {
                background-color: #1976D2;
              }
              .report-links {
                display: flex;
                gap: 10px;
                flex-wrap: wrap;
              }
            </style>
          </head>
          <body>
            <h1>Testing Results Dashboard</h1>
            
            <div class="card">
              <h2>Security Analysis</h2>
              <div class="report-links">
                <a href="security/semgrep-report.html">Semgrep Report</a>
                <a href="security/snyk-report.html">Snyk Report</a>
              </div>
            </div>
            
            <div class="card">
              <h2>BDD Test Results</h2>
              <a href="bdd/bdd-report.html">View BDD Test Report</a>
            </div>

            <div class="card">
              <h2>Mutation Testing</h2>
              <div class="report-links">
                <a href="mutation/mutation-report.html">View Mutation Report</a>
              </div>
            </div>
          </body>
          </html>
          EOF

      - name: List Reports Directory
        run: |
          echo "Contents of reports directory:"
          ls -R reports/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports
          force_orphan: true
