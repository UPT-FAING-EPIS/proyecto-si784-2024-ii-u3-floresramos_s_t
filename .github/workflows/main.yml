name: Unified Testing & Analysis Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  tests:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configurando la versión de NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restaurar los paquetes
        run: |
          cd PROYECTO_PDF
          dotnet restore
          
      - name: Ejecutar pruebas
        run: |
          cd PROYECTO_PDF
          dotnet test --collect:"XPlat Code Coverage"
          
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.7
        with:
          reports: '**/PROYECTO_PDF/**/coverage.cobertura.xml'
          targetdir: coveragereport
          reporttypes: MarkdownSummary;MarkdownAssembliesSummary;MarkdownSummaryGithub
          
      - name: Publicar Reporte de Cobertura
        run: |
          mkdir -p reports/coverage
          cp coveragereport/* reports/coverage/ || true
          echo "::notice title=Coverage Report::El reporte de cobertura ha sido generado"
          
      # Extract coverage metrics for annotation
      - name: Extraer Métricas de Cobertura
        run: |
          if [ -f coveragereport/Summary.md ]; then
            coverage=$(grep -o '[0-9]*\.[0-9]*%' coveragereport/Summary.md | head -n 1)
            echo "::notice title=Code Coverage::Cobertura total: ${coverage}"
            if [[ ${coverage%\%} < 80 ]]; then
              echo "::warning::La cobertura está por debajo del 80%"
            fi
          fi

  mutation:
    name: Mutation Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Stryker
        id: stryker
        run: |
          dotnet tool install -g dotnet-stryker
          cd PROYECTO_PDF/NegocioPDF.Tests
          dotnet stryker > stryker_output.txt
          
          # Extraer y anotar métricas de mutación
          mutation_score=$(grep "The mutation score is" stryker_output.txt | grep -oP '\d+\.\d+')
          killed_mutants=$(grep "killed" stryker_output.txt | grep -oP '\d+(?= mutants were killed)')
          survived_mutants=$(grep "survived" stryker_output.txt | grep -oP '\d+(?= mutants survived)')
          
          echo "::notice title=Mutation Score::Overall mutation score: ${mutation_score}%"
          echo "::notice title=Mutation Details::Killed mutants: ${killed_mutants}, Survived mutants: ${survived_mutants}"
          
          if [ $(echo "${mutation_score} < 75" | bc -l) -eq 1 ]; then
            echo "::warning::Mutation score is below 75%"
          fi
        
      - name: Prepare Mutation Report
        run: |
          mkdir -p reports/mutation
          cp -r PROYECTO_PDF/NegocioPDF.Tests/StrykerOutput/* reports/mutation/

  publish-dashboard:
    needs: [tests, mutation]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Dashboard
        run: |
          mkdir -p dashboard
          cat > dashboard/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Testing Results Dashboard</title>
            <style>
              body { font-family: Arial; max-width: 1200px; margin: 0 auto; padding: 20px; }
              .card { border: 1px solid #ddd; padding: 20px; margin: 10px; border-radius: 8px; }
              .metric { font-size: 24px; color: #2196F3; }
            </style>
          </head>
          <body>
            <h1>Testing Results Dashboard</h1>
            
            <div class="card">
              <h2>Code Coverage</h2>
              <a href="/reports/coverage/index.html">Detailed Coverage Report</a>
            </div>
            
            <div class="card">
              <h2>Mutation Testing</h2>
              <a href="/reports/mutation/index.html">Mutation Test Report</a>
            </div>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dashboard
