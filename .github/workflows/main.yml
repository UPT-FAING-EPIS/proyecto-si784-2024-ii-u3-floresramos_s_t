name: Unified Testing & Analysis Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  security-analysis:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Semgrep
      - name: Run Semgrep
        run: |
          docker pull semgrep/semgrep
          docker run --rm -v $(pwd):/src semgrep/semgrep semgrep scan --config="p/default" --json --output semgrep.json
      
      # Snyk
      - uses: snyk/actions/setup@master
      
      - name: Set up .NET version
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Run Snyk test
        run: |
          mkdir -p reports/security
          snyk code test --json | snyk-to-html -o reports/security/snyk-report.html
          echo "::notice title=Snyk::AnÃ¡lisis de Snyk completado"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Generate index page for security reports
      - name: Prepare Security Reports Index
        run: |
          cat > reports/security/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Security Analysis Reports</title>
            <style>
              body { font-family: Arial; max-width: 800px; margin: 0 auto; padding: 20px; }
              .report-link { display: block; margin: 10px 0; padding: 10px; background: #f0f0f0; }
            </style>
          </head>
          <body>
            <h1>Security Analysis Reports</h1>
            <div class="report-link">
              <h2>Semgrep Analysis</h2>
              <a href="semgrep-results.json">View Semgrep Results</a>
            </div>
            <div class="report-link">
              <h2>Snyk Analysis</h2>
              <a href="snyk-report.html">View Snyk Report</a>
            </div>
          </body>
          </html>
          EOF

  bdd:
    name: BDD Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore dependencies
        run: |
          cd PROYECTO_PDF
          dotnet restore
      
      - name: Build
        run: |
          cd PROYECTO_PDF
          dotnet build --no-restore
      
      - name: Run BDD Tests
        run: |
          cd PROYECTO_PDF
          dotnet test --filter "Category=BDD" --no-build --verbosity normal --logger "trx;LogFileName=bdd-results.trx"
      
      - name: Install SpecFlow Plus LivingDoc
        run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
      
      - name: Generate BDD Report
        run: |
          cd PROYECTO_PDF
          livingdoc test-assembly ./NegocioPDF.Tests/bin/Debug/net8.0/NegocioPDF.Tests.dll -t ./NegocioPDF.Tests/bin/Debug/net8.0/TestExecution.json -o ./reports/bdd/PDFTests.html

      - name: Extract BDD Results
        run: |
          if [ -f "PROYECTO_PDF/TestResults/bdd-results.trx" ]; then
            passed=$(grep -o 'outcome="Passed"' PROYECTO_PDF/TestResults/bdd-results.trx | wc -l)
            failed=$(grep -o 'outcome="Failed"' PROYECTO_PDF/TestResults/bdd-results.trx | wc -l)
            echo "::notice title=BDD Results::Tests Passed: ${passed}, Tests Failed: ${failed}"
          fi

  publish-dashboard:
    needs: [security-analysis, bdd]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Dashboard
        run: |
          mkdir -p dashboard
          cat > dashboard/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Testing Results Dashboard</title>
            <style>
              body { 
                font-family: Arial; 
                max-width: 1200px; 
                margin: 0 auto; 
                padding: 20px; 
                background-color: #f5f5f5;
              }
              .card { 
                border: 1px solid #ddd; 
                padding: 20px; 
                margin: 20px 0; 
                border-radius: 8px;
                background-color: white;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
              }
              .card h2 {
                color: #333;
                margin-top: 0;
                border-bottom: 2px solid #2196F3;
                padding-bottom: 10px;
              }
              .metric { 
                font-size: 24px; 
                color: #2196F3; 
              }
              a {
                display: inline-block;
                padding: 10px 20px;
                background-color: #2196F3;
                color: white;
                text-decoration: none;
                border-radius: 4px;
                transition: background-color 0.3s;
              }
              a:hover {
                background-color: #1976D2;
              }
            </style>
          </head>
          <body>
            <h1>Testing Results Dashboard</h1>
            
            <div class="card">
              <h2>Security Analysis</h2>
              <div class="report-links">
                <a href="/reports/security/semgrep-results.json">Semgrep Report</a>
                <a href="/reports/security/snyk-report.html">Snyk Report</a>
              </div>
            </div>
            
            <div class="card">
              <h2>BDD Test Results</h2>
              <a href="/reports/bdd/PDFTests.html">View BDD Test Report</a>
            </div>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dashboard
